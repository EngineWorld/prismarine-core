#version 450

#extension GL_ARB_separate_shader_objects : require
#extension GL_ARB_shading_language_420pack : require

#include "../include/constants.glsl"
#include "../include/structs.glsl"
#include "../include/uniforms.glsl"
#include "../include/rays.glsl"
#include "../include/STOmath.glsl"

LOCAL_SIZE_LAYOUT;

void main()
{
    const int it = int(gl_GlobalInvocationID.x);
    if (it >= RAY_BLOCK samplerUniform.rayCount) return;
    const int t = actived[it];
    
    Ray ray = fetchRayDirect(t);
    Hit hit = fetchHitDirect(t);
    ray.bounce -= 1;
    ray.final.xyz = max(vec3(0.0f), ray.final.xyz);
    ray.color.xyz = max(vec3(0.0f), ray.color.xyz);
    hit.vmods.w = equalF(hit.dist, 0.f) ? (hit.vmods.w+1.f) : 0.f;

    if (ray.bounce < 0 || hit.shaded <= 0 || mlength(ray.color.xyz) < 0.0001f) {
        ray.actived = 0;
    }

    storeHit(t, hit);
    storeRay(t, ray);
}
