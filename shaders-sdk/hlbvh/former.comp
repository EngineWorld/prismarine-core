#version 460 core

#include "../include/constants.glsl"
#include "../include/structs.glsl"
#include "../include/uniforms.glsl"
#include "../include/vertex.glsl"
#include "../include/morton.glsl"
#include "../include/STOmath.glsl"

layout ( std430, binding = 0 ) restrict buffer MortoncodesBlock {
    uint Mortoncodes[];
} mortonBuf;

layout ( std430, binding = 1 ) restrict buffer IndicesBlock {
    int MortoncodesIndices[];
} mortonIdc;

layout ( std430, binding = 2 ) restrict buffer CounterBlock {
    int aabbCounter[1];
} counters;

layout ( std430, binding = 3 ) restrict buffer OutLeafBlock {
    HlbvhNode Leafs[];
} leafsBuf;

layout ( std430, binding = 4 ) restrict buffer OutLeafBlock {
    HlbvhNode Leafs[];
} groupLeafsBuf;

layout ( std430, binding = 5 ) restrict buffer MortoncodesBlock {
    uint Mortoncodes[];
} groupMortonBuf;

layout ( std430, binding = 6 ) restrict buffer IndicesBlock {
    int MortoncodesIndices[];
} groupMortonIdc;





LOCAL_SIZE_LAYOUT;

initAtomicIncFunction(counters.aabbCounter[0], atomicIncAABB, int)

// CLOCKWORK WIP (only for evaluation)

void main() {
    const int t = int(gl_GlobalInvocationID.x);
    if (t >= GEOMETRY_BLOCK geometryUniform.triangleCount) return;

    uint pGroupId = 0;
    pGroupId = readLane(LANE_IDX == 0 ? atomicAdd(counters.aabbCounter[0], WARP_SIZE) : 0, 0); 
    uint pGroupPrimitiveId = MortoncodesIndices[pGroupId + LANE_IDX];
    uint pGroupIdCompact = pGroupId / WARP_SIZE;

    HlbvhNode groupedLeaf = groupLeafsBuf.Leafs[pGroupIdCompact];
    groupedLeaf.box = reductionUnifyBoxes(pGroupPrimitiveId); // TODO
    groupedLeaf.pdata.xy = ivec2(pGroupIdCompact);
    groupedLeaf.pdata.zw = ivec2(-1, pGroupId);

    groupLeafsBuf.Leafs[pGroupIdCompact] = groupedLeaf;
    groupMortonBuf.Mortoncodes[pGroupIdCompact] = 
                encodeMorton3_64(clamp(
                uvec3(floor(clamp((groupedLeaf.box.mn + groupedLeaf.box.mx).xyz * 0.5f, vec3(0.0f), vec3(0.99999f)) * 1024.0f)), 
                uvec3(0), uvec3(1023)));
    groupMortonIdc.MortoncodesIndices[pGroupIdCompact] = int(pGroupIdCompact);
}
